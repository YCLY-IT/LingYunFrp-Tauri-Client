name: Tauri Cross-Platform Build

on:
  workflow_dispatch:

env:
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
  ACTIONS_STEP_DEBUG: true

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: Windows
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: macOS
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: Linux

    timeout-minutes: 45
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.artifact_name }}

    steps:
      # 1. 检出代码（修复Windows取消问题）
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 修复浅克隆可能导致的问题
          persist-credentials: false  # 避免权限冲突

      # 2. 统一包管理器处理（修复yarn冲突）
      - name: Force use pnpm
        run: |
          # 移除packageManager字段临时解决冲突
          if [ -f package.json ]; then
            sed -i '/"packageManager"/d' package.json
          fi
          # 安装pnpm
          npm install -g pnpm@8
          echo "PNPM_PATH=$(which pnpm)" >> $GITHUB_ENV
          echo "$(which pnpm)" >> $GITHUB_PATH

      # 3. 设置Node.js环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: 'pnpm'

      # 4. 各平台特定准备
      - name: Platform setup
        shell: bash
        run: |
          case "$RUNNER_OS" in
            "Linux")
              sudo apt-get update -y
              sudo apt-get install -y \
                libwebkit2gtk-4.1-dev \
                libgtk-3-dev \
                libayatana-appindicator3-dev \
                librsvg2-dev \
                libssl-dev
              ;;
            "macOS")
              brew update
              brew install create-dmg || true
              # 防止macOS构建被取消
              ulimit -n 8192
              ;;
            "Windows")
              # 添加Windows特定依赖
              choco install -y llvm || true
              ;;
          esac

      # 5. Rust工具链安装
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          components: rust-src, clippy, rustfmt

      # 6. 缓存优化
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      # 7. 安装依赖
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --shamefully-hoist

      # 8. 构建前端
      - name: Build frontend
        run: pnpm run build

      # 9. 构建Tauri
      - name: Build Tauri
        timeout-minutes: 25
        run: |
          pnpm tauri build --target ${{ matrix.target }} --verbose
          # 收集构建日志
          find src-tauri/target -name "*.log" -exec cp {} . \; || true

      # 10. 上传制品
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}-Build-${{ github.run_id }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/
            *.log
          retention-days: 3
