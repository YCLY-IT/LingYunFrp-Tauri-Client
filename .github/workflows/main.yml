name: Tauri Cross-Platform Build

# 仅允许手动触发
on:
  workflow_dispatch:

env:
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
  ACTIONS_STEP_DEBUG: true  # 调试模式

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: Windows
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: macOS
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: Linux
            lib_webkit: libwebkit2gtk-4.1-dev

    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    name: Build ${{ matrix.artifact_name }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"  # 使用 Node.js 22
          cache: 'npm'

      - name: Install system dependencies
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update -y
            sudo apt-get install -y \
              libwebkit2gtk-4.1-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev \
              libssl-dev
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew install create-dmg || true
          fi

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          components: rust-src, clippy

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build

      - name: Build Tauri
        timeout-minutes: 15
        run: npm run tauri build -- --target ${{ matrix.target }}

      - name: Upload artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}-Build
          path: |
            src-tauri/target/${{ matrix.target }}/release/
            src-tauri/target/**/*.log
          retention-days: 3
