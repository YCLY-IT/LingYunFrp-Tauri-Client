name: Tauri Cross-Platform Build

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: Windows
            shell_cmd: pwsh
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: macOS
            shell_cmd: bash
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: Linux
            shell_cmd: bash

    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    env:
      TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      NODE_OPTIONS: "--max-old-space-size=8192"

    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. 设置Node.js和PNPM
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: 'pnpm'

      # 3. 初始化PNPM
      - name: Setup PNPM
        shell: ${{ matrix.shell_cmd }}
        run: |
          npm install -g pnpm@8
          pnpm -v
          echo "PNPM_PATH=$(which pnpm)" >> $GITHUB_ENV
          echo "$(which pnpm)" >> $GITHUB_PATH

      # 4. 平台特定设置
      - name: Platform setup
        shell: ${{ matrix.shell_cmd }}
        run: |
          if [[ "${{ matrix.os }}" == "macOS" ]]; then
            ulimit -n 8192
            brew update-reset
            brew install create-dmg || true
          elif [[ "${{ matrix.os }}" == "Linux" ]]; then
            sudo apt-get update -y
            sudo apt-get install -y \
              libwebkit2gtk-4.1-dev \
              libgtk-3-dev \
              libayatana-appindicator3-dev \
              librsvg2-dev \
              libssl-dev \
              libasound2-dev
          elif [[ "${{ matrix.os }}" == "Windows" ]]; then
            choco install -y llvm --no-progress || true
          fi

      # 5. 安装Rust
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
          components: rust-src, clippy, rustfmt

      # 6. 缓存依赖
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-${{ matrix.target }}-${{ hashFiles('pnpm-lock.yaml') }}

      # 7. 安装依赖
      - name: Install dependencies
        shell: ${{ matrix.shell_cmd }}
        run: |
          pnpm config set store-dir ~/.pnpm-store
          pnpm install --frozen-lockfile --shamefully-hoist

      # 8. 构建前端
      - name: Build frontend
        shell: ${{ matrix.shell_cmd }}
        run: pnpm run build

      # 9. 构建Tauri
      - name: Build Tauri
        timeout-minutes: 30
        shell: ${{ matrix.shell_cmd }}
        env:
          RUST_BACKTRACE: full
        run: |
          pnpm tauri build --target ${{ matrix.target }} --verbose
          find src-tauri/target -name "*.log" -exec cp {} . \; || true

      # 10. 上传制品
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}-Build
          path: |
            src-tauri/target/${{ matrix.target }}/release/
            *.log
          retention-days: 7
