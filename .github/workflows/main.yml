name: Build Windows x64 (Node.js 22) with Autofix

on:
  workflow_dispatch:  # 手动触发

env:
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

jobs:
  build-windows:
    name: Build with Autofix
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      # 1. 设置 Node.js 22
      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: 'npm'

      # 2. 安装 Rust (Windows 工具链)
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true

      # 3. 安装依赖（包含 ESLint）
      - name: Install dependencies
        run: |
          npm ci
          npm install -D eslint @typescript-eslint/eslint-plugin @typescript-eslint/parser

      # 4. 自动修复代码（核心步骤）
      - name: Autofix unused variables
        run: |
          npx eslint src --ext .vue,.ts,.tsx --fix --quiet
          git diff --exit-code || echo "代码已被自动修复"

      # 5. 修复文件名大小写问题
      - name: Fix filename casing
        shell: pwsh
        run: |
          if (Test-Path "src/views/Dashboard/Index.vue") {
            Rename-Item "src/views/Dashboard/Index.vue" "index.vue"
          }

      # 6. 构建前端
      - name: Build frontend
        run: npm run build

      # 7. 安装 Tauri CLI
      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      # 8. 构建 Tauri 应用
      - name: Build Tauri app
        run: npm run tauri build -- --target x86_64-pc-windows-msvc

      # 9. 上传产物
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Windows-Build
          path: |
            src-tauri/target/x86_64-pc-windows-msvc/release/*.exe
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
