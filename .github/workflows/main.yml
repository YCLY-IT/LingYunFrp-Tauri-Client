name: Build Windows x64 (Node.js 22)

on:
  workflow_dispatch:  # 仅手动触发

env:
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

jobs:
  build-windows:
    name: Build Windows x64 Executable
    runs-on: windows-latest  # Windows 构建环境

    steps:
      - uses: actions/checkout@v4

      # 设置 Node.js 22
      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: 'npm'

      # 安装 Rust (Windows x64 工具链)
      - name: Install Rust (x86_64-pc-windows-msvc)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          target: x86_64-pc-windows-msvc  # Windows 64位目标
          override: true

      # 安装 Tauri CLI
      - name: Install Tauri CLI
        run: npm install -g @tauri-apps/cli

      # 安装依赖
      - name: Install dependencies
        run: npm ci

      # 构建前端
      - name: Build frontend
        run: npm run build

      # 构建 Tauri 应用 (Windows x64)
      - name: Build Tauri app (Windows x64)
        run: npm run tauri build -- --target x86_64-pc-windows-msvc

      # 上传构建产物 (包含 .exe 和 .msi)
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: LingYunFRP-Windows-x64
          path: |
            src-tauri/target/x86_64-pc-windows-msvc/release/*.exe
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
