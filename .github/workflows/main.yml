name: 构建 Windows 64 位可执行文件

on:
  workflow_dispatch:
    inputs:
      build_type:
        type: choice
        description: "选择构建类型"
        options:
          - 开发版（Debug）
          - 发布版（Release）
        default: 发布版（Release）
      arch:
        type: choice
        description: "选择架构"
        options:
          - x64
          - x86
        default: x64

jobs:
  build:
    runs-on: windows-latest
    env:
      Tauri_ARCH: ${{ github.event.inputs.arch == 'x64' && 'x64' || 'x86' }}
      Tauri_PLATFORM: windows
      NODE_OPTIONS: --max-old-space-size=4096
      TAURI_BUILD_TYPE: ${{ github.event.inputs.build_type == '发布版（Release）' && 'release' || 'debug' }}

    steps:
      - name: 检出代码
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 设置 Node.js 22
        uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
          registry-url: https://registry.npmmirror.com

      - name: 安装前端依赖
        run: npm install
        working-directory: .

      - name: 安装 Tauri 构建工具
        run: |
          cd src-tauri
          cargo install cargo-bundle
          cargo install tauri-cli
        working-directory: .

      - name: 构建前端应用
        run: npm run build
        working-directory: .

      - name: 构建 Tauri 应用（Windows ${{ github.event.inputs.arch }}）
        run: |
          cd src-tauri
          $target = "${{ github.event.inputs.arch == 'x64' && 'x86_64-pc-windows-msvc' || 'i686-pc-windows-msvc' }}"
          if ("$env:TAURI_BUILD_TYPE" -eq "release") {
            cargo tauri build --target $target --release
          } else {
            cargo tauri build --target $target
          }
        working-directory: .
        shell: pwsh

      - name: 整理构建产物
        run: |
          mkdir -p dist/windows-${env:Tauri_ARCH}-${env:TAURI_BUILD_TYPE}
          cp src-tauri/target/${env:TAURI_BUILD_TYPE}/bundle/exe/*.exe dist/windows-${env:Tauri_ARCH}-${env:TAURI_BUILD_TYPE}/
        working-directory: .
        shell: bash

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: lingyunfrp-windows-${{ github.event.inputs.arch }}-${{ github.event.inputs.build_type == '发布版（Release）' && 'release' || 'debug' }}
          path: dist/windows-${{ github.event.inputs.arch == 'x64' && 'x64' || 'x86' }}-${{ github.event.inputs.build_type == '发布版（Release）' && 'release' || 'debug' }}/
          retention-days: 14

      - name: 输出构建信息
        run: |
          echo "构建完成！可执行文件路径：dist/windows-${env:Tauri_ARCH}-${env:TAURI_BUILD_TYPE}/"
          dir dist/windows-${env:Tauri_ARCH}-${env:TAURI_BUILD_TYPE}/
        working-directory: .
        shell: bash
